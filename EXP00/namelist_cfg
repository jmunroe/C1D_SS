!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! NEMO namelists:
!!                1 - run manager      (namrun)
!!                2 - domain           (namcfg, namzgr, namdom, namtsd)
!!                3 - surface boundary (namsbc, namsbc_ana, namsbc_core, namsbc_rnf, namsbc_apr, namtra_qsr)
!!                4 - time splitting  (namsplit)
!!                5 - lateral boundary (namlbc, namcla, nam_tide, nambdy, nambdy_index, nambdy_dta, nambdy_tide)
!!                6 - bottom boundary  (nambfr, nambbc, nambbl)
!!                7 - tracer (nameos, namtra_ldf, namtra_dmp, namtra_adv, namtra_adv_mle)
!!                8 - dynamics (namdyn_adv, namdyn_vor, namdyn_hpg, namdyn_spg, namdyn_ldf, nam_vvl)
!!                9 - vertical physics (namzdf,namzdf_gls,namzdf_ric,namzdf_tke,namzdf_kpp,namzdf_ddm,namzdf_tmx)
!!               10 - miscellaneous (nammpp,namnc4)
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

!!=======================================================================
!!        ***  Run management namelists  ***
!!=======================================================================
!!
!!
!-----------------------------------------------------------------------
&namrun        !   parameters of the run
!-----------------------------------------------------------------------
   cn_exp      =  "SalishSea"   !  experience name
   nn_it000    =       1   !  first time step
   nn_itend    =    2160   !  last  time step
   nn_date0    =  20160202 !  date at nit_0000 (format yyyymmdd) used if ln_rstart=F or (ln_rstart=T and nn_rstctl=0 or 1)
   nn_leapy    =       1   !  Leap year calendar (1) or not (0)
   nn_stock    =    1080   !  frequency of creation of a restart file (modulo referenced to 1)
   nn_write    =     90    !  frequency of write in the output file   (modulo referenced to nn_it000)
   ln_clobber  = .true.   !  clobber (overwrite) an existing file
   nn_istate   =       1   !  output the initial state (1) or not (0)
/
!-----------------------------------------------------------------------
&namcfg     !   parameters of the configuration   
!-----------------------------------------------------------------------
   cp_cfg      =  "SalishSea"                 !  name of the configuration
   cp_cfz      =  "deep basin"            !  name of the zoom of configuration
   jp_cfg      =     120                 !  resolution of the configuration
   jpidta      =     398                 !  1st lateral dimension ( >= jpi )
   jpjdta      =     898                 !  2nd    "         "    ( >= jpj )
   jpkdta      =      40                 !  number of levels      ( >= jpk )
   jpiglo      =       3                 !  1st dimension of global domain --> i  = jpidta
   jpjglo      =       3                 !  2nd    -                  -    --> j  = jpjdta
   jpizoom     =       1                 !  left bottom (i,j) indices of the zoom
   jpjzoom     =       1                 !  in data domain indices
   jperio      =       0                 !  lateral cond. type (between 0 and 6)
/
!-----------------------------------------------------------------------
&namzgr        !   vertical coordinate
!-----------------------------------------------------------------------
   ln_zco      = .false.   !  z-coordinate - full    steps   (T/F)      ("key_zco" may also be defined)
   ln_zps      = .true.    !  z-coordinate - partial steps   (T/F)
/
!-----------------------------------------------------------------------
&namzgr_sco    !   s-coordinate or hybrid z-s-coordinate
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namdom        !   space and time domain (bathymetry, mesh, timestep)
!-----------------------------------------------------------------------
   nn_bathy    =    1      !  compute (=0) or read (=1) the bathymetry file
   nn_msh      =    0      !  create (=1) a mesh file or not (=0)
   rn_hmin     =    3.     !  min depth of the ocean (>0) or min number of ocean level (<0)
   rn_e3zps_min=    2.     !  partial step thickness is set larger than the minimum of
   rn_e3zps_rat=    0.5    !  rn_e3zps_min and rn_e3zps_rat*e3t, with 0<rn_e3zps_rat<1
                           !
   rn_rdt      =   40.     !  time step for the dynamics (and tracer if nn_acc=0)
   rn_atfp     =    0.1    !  asselin time filter parameter
   nn_acc      =    0      !  acceleration of convergence : =1      used, rdt < rdttra(k)
                           !                                =0, not used, rdt = rdttra
   rn_rdtmin   =   300.    !  minimum time step on tracers (used if nn_acc=1)
   rn_rdtmax   =   300.    !  maximum time step on tracers (used if nn_acc=1)
   rn_rdth     =   300.    !  depth variation of tracer time step  (used if nn_acc=1)

   jphgr_msh   =       0                 !  type of horizontal mesh
   !ppglam0     =    -150.0               !  longitude of first raw and column T-point (jphgr_msh = 1)
   !ppgphi0     =      50.0               ! latitude  of first raw and column T-point (jphgr_msh = 1)
   !ppe1_deg    =       0.1               !  zonal      grid-spacing (degrees)
   !ppe2_deg    =       0.1               !  meridional grid-spacing (degrees)
   !ppe1_m      =  999999.0               !  zonal      grid-spacing (degrees)
   !ppe2_m      =  999999.0               !  meridional grid-spacing (degrees)
   ppsur       =  999999.                !  ORCA r4, r2 and r05 coefficients
   ppa0        =  999999.                ! (default coefficients)
   ppa1        =  999999.                !
   ppkth       =      25.                !
   ppacr       =       3.                !
   ppdzmin     =       1.                !  Minimum vertical spacing
   pphmax      =     428.0               !  Maximum depth
   ldbletanh   =  .FALSE.                 !  Use/do not use double tanf function for vertical coordinates
/
!-----------------------------------------------------------------------
&namsplit      !   time splitting parameters                            ("key_dynspg_ts")
!-----------------------------------------------------------------------
   ln_bt_fw      =    .TRUE.           !  Forward integration of barotropic equations
   ln_bt_av      =    .TRUE.           !  Time filtering of barotropic variables
   ln_bt_nn_auto =    .FALSE.          !  Set nn_baro automatically to be just below
                                       !  a user defined maximum courant number (rn_bt_cmax)
   nn_baro       =     20              !  Number of iterations of barotropic mode
                                       !  during rn_rdt seconds. Only used if ln_bt_nn_auto=F
   rn_bt_cmax    =    0.8              !  Maximum courant number allowed if ln_bt_nn_auto=T
   nn_bt_flt     =    1                !  Time filter choice
                                       !  = 0 None
                                       !  = 1 Boxcar over   nn_baro barotropic steps
                                       !  = 2 Boxcar over 2*nn_baro     "        "
/
!-----------------------------------------------------------------------
&namcrs        !   Grid coarsening for dynamics output and/or
               !   passive tracer coarsened online simulations
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namc1d        !   1D configuration options                             ("key_c1d")
!-----------------------------------------------------------------------
   rn_lat1d    =      49.29 !  Column latitude
   rn_lon1d    =    -123.82 !  Column longitude
   ln_c1d_locpt= .true.   ! Localization of 1D config in a grid (T) or independant point (F)
/
!-----------------------------------------------------------------------
&namtsd    !   data : Temperature  & Salinity
!-----------------------------------------------------------------------
!          !  file name  ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!          !             !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_tem  = 'SalishSeaCast-VNR002_1h_grid_T',   1        ,'votemper' ,  .false.     , .false.,  'daily'  , ''       , ' '        , ''
   sn_sal  = 'SalishSeaCast-VNR002_1h_grid_T',   1        ,'vosaline' ,  .false.     , .false.,  'daily'  , ''       , ' '        , ''
   !
   cn_dir        = './source_model/'     !  root directory for the location of the runoff files
   ln_tsd_init   = .true.   !  Initialisation of ocean T & S with T &S input data (T) or not (F)
   ln_tsd_tradmp = .false.   !  damping of ocean T & S toward T &S input data (T) or not (F)
/
!-----------------------------------------------------------------------
&namsbc        !   Surface Boundary Condition (surface module)
!-----------------------------------------------------------------------
   nn_fsbc     = 1         !  frequency of surface boundary condition computation
                           !     (also = the frequency of sea-ice model call)
   nn_ice      = 0         !  =0 no ice boundary condition   ,
   ln_ana      = .false.   !  analytical formulation                    (T => fill namsbc_ana )
   ln_rnf      = .false.   !  runoffs                                   (T => fill namsbc_rnf)
   ln_ssr      = .false.   !  Sea Surface Restoring on T and/or S       (T => fill namsbc_ssr)
   ln_blk_core = .true.   !  CORE bulk formulation                     (T => fill namsbc_core)
   nn_fwb      = 0         !  FreshWater Budget: =0 unchecked

   ln_apr_dyn  = .true.   !  Patm gradient added in ocean & ice Eqs.   (T => fill namsbc_apr )
/
!-----------------------------------------------------------------------

&namsbc_ana    !   analytical surface boundary condition
!-----------------------------------------------------------------------
   nn_tau000   =   0     !  gently increase the stress over the first ntau_rst time-steps
   rn_utau0    =   0.0     !  uniform value for the i-stress
/
!-----------------------------------------------------------------------
&namsbc_flx    !   surface boundary condition : flux formulation
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_clio   !   namsbc_clio  CLIO bulk formulae
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_core   !   namsbc_core  CORE bulk formulae
!-----------------------------------------------------------------------
!              !  file name  ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !             !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
  sn_wndi = 'ops',                  1,           'u_wind',    .true.,       .false.,  'daily',    'weights.nc', 'Uwnd'
  sn_wndj = 'ops',                  1,           'v_wind',    .true.,       .false.,  'daily',    'weights.nc', 'Vwnd'
  sn_qsr  = 'ops',                  1,           'solar',     .true.,       .false.,  'daily',    'weights.nc', ''
  sn_qlw  = 'ops',                  1,           'therm_rad', .true.,       .false.,  'daily',    'weights.nc', ''
  sn_tair = 'ops',                  1,           'tair',      .true.,       .false.,  'daily',    'weights.nc', ''
  sn_humi = 'ops',                  1,           'qair',      .true.,       .false.,  'daily',    'weights.nc', ''
  sn_prec = 'ops',                  1,           'precip',    .true.,       .false.,  'daily',    'weights.nc', ''
  sn_snow = 'no_snow',            -12,           'snow',      .true.,       .true.,  'yearly',    'weights.nc', ''

  cn_dir      = './ATMDATA/' 
   rn_zqt      = 2.      !  Air temperature and humidity reference height (m)
   rn_vfac     = 1.      !  new feature, lets use (0. for comparison, then switch to 1)
                         !  multiplicative factor for ocean/ice velocity
                         !  in the calculation of the wind stress (0.=absolute winds or 1.=relative winds)
/
!-----------------------------------------------------------------------
&namsbc_mfs   !   namsbc_mfs  MFS bulk formulae
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_cpl    !   coupled ocean/atmosphere model                       ("key_oasis3")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_sas    !   analytical surface boundary condition
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namtra_qsr    !   penetrative solar radiation
!-----------------------------------------------------------------------
!              !  file name  ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !             !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   ln_qsr_rgb  = .false.  !  RGB (Red-Green-Blue) light penetration
   ln_qsr_2bd  = .false.   !  2 bands              light penetration
   ln_qsr_bio  = .true.   !  bio-model light penetration
   nn_chldta   = 0        !  RGB : Chl data (=1) or cst value (=0)
/
!-----------------------------------------------------------------------
&namsbc_rnf    !   runoffs namelist surface boundary condition
!-----------------------------------------------------------------------
   ln_rnf_mouth = .false.   !  specific treatment at rivers mouths
/
!-----------------------------------------------------------------------
&namsbc_apr    !   Atmospheric pressure used as ocean forcing or in bulk
!-----------------------------------------------------------------------
!         !  file name       ! frequency (hours) ! variable  ! time interp. !  clim   ! 'yearly'/ ! weights                            ! rotation !
!         !                  !  (if <0  months)  !   name    !   (logical)  !  (T/F ) ! 'monthly' ! filename                           ! pairing  !
  sn_apr  = 'ops',  1,                  'atmpres',   .true.,       .false.,  'daily',   'weights.nc', ''

  cn_dir      = './ATMDATA/'     !  root directory for the location of the bulk files
  ln_apr_obc  = .false.  !  inverse barometer added to OBC ssh data
/
!-----------------------------------------------------------------------
&namsbc_ssr    !   surface boundary condition : sea surface restoring
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_alb    !   albedo parameters
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namberg       !   iceberg parameters
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namlbc        !   lateral momentum boundary condition
!-----------------------------------------------------------------------
   rn_shlat    =    0.5     !  shlat = 0  !  0 < shlat < 2  !  shlat = 2  !  2 < shlat
/
!-----------------------------------------------------------------------
&namcla        !   cross land advection
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namagrif      !  AGRIF zoom                                            ("key_agrif")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nam_tide      !   tide parameters (#ifdef key_tide)   see NEMO-3.6-code/NEMOGCM/NEMO/OPA_SRC/SBC/tideini.F90
! Tidal parameters that we use to have to input are in OPA_SRC/SBC/tide.h90
!-----------------------------------------------------------------------
   ln_tide_pot   = .false.  !  use tidal potential forcing
   rdttideramp   =    0.    !
   clname(1)     =   'M2'   !  name of constituent
   clname(2)     =   'S2'
   clname(3)     =   'N2'
   clname(4)     =   'K1'
   clname(5)     =   'O1'
   clname(6)     =   'Q1'
   clname(7)     =   'K2'
   clname(8)     =   'P1'
/
!-----------------------------------------------------------------------
&nambdy        !  unstructured open boundaries                          ("key_bdy")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nambdy_dta      !  open boundaries - external data           ("key_bdy")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nambdy_tide     ! tidal forcing at open boundaries
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nambfr        !   bottom friction
!-----------------------------------------------------------------------
   nn_bfr      =    2       !  type of bottom friction :   = 0 : free slip,  = 1 : linear friction
                            !                              = 2 : nonlinear friction
   rn_bfri1    =    4.e-4   !  bottom drag coefficient (linear case)
   rn_bfri2    =    7.5e-3  !  bottom drag coefficient (non linear case). Minimum coeft if ln_loglayer=T
   rn_bfri2_max =   2.      !  max. bottom drag coefficient (non linear case and ln_loglayer=T)
   rn_bfeb2    =    2.5e-3  !  bottom turbulent kinetic energy background  (m2/s2)
   rn_bfrz0    =    0.07    !  bottom roughness [m] if ln_loglayer=T
   ln_bfr2d    = .false.    !  horizontal variation of the bottom friction coef (read a 2D mask file )
   rn_bfrien   =    400.     !  local multiplying factor of bfr (ln_bfr2d=T)
   rn_tfri1    =    4.e-4   !  top drag coefficient (linear case)
   rn_tfri2    =    2.5e-3  !  top drag coefficient (non linear case). Minimum coeft if ln_loglayer=T
   rn_tfri2_max =   1.e-1   !  max. top drag coefficient (non linear case and ln_loglayer=T)
   rn_tfeb2    =    0.0     !  top turbulent kinetic energy background  (m2/s2)
   rn_tfrz0    =    3.e-3   !  top roughness [m] if ln_loglayer=T
   ln_tfr2d    = .false.    !  horizontal variation of the top friction coef (read a 2D mask file )
   rn_tfrien   =    50.     !  local multiplying factor of tfr (ln_tfr2d=T)

   ln_bfrimp   = .true.     !  implicit bottom friction (requires ln_zdfexp = .false. if true)
   ln_loglayer = .true.    !  logarithmic formulation (non linear case)
/
!-----------------------------------------------------------------------
&nambbc        !   bottom temperature boundary condition
!-----------------------------------------------------------------------
   ln_trabbc   = .false.   !  Apply a geothermal heating at the ocean bottom
   nn_geoflx   =    0      !  geothermal heat flux: = 0 no flux
   rn_geoflx_cst = 86.4e-3 !  Constant value of geothermal heat flux [W/m2]
/
!-----------------------------------------------------------------------
&nambbl        !   bottom boundary layer scheme
!-----------------------------------------------------------------------
   nn_bbl_ldf  =  0     !  diffusive bbl (=1)   or not (=0)
   nn_bbl_adv  =  0     !  advective bbl (=1/2) or not (=0)
   rn_ahtbbl   =  0     !  lateral mixing coefficient in the bbl  [m2/s]
   rn_gambbl   =  10.   !  advective bbl coefficient   
/
!-----------------------------------------------------------------------
&nameos        !   ocean physical parameters
!-----------------------------------------------------------------------
   nn_eos      =  -1      !  type of equation of state and Brunt-Vaisala frequency
                                 !  =-1, TEOS-10
                                 !  = 0, EOS-80
                                 !  = 1, S-EOS   (simplified eos)
   ln_useCT    = .true. ! use of Conservative Temp. ==> surface CT converted in Pot. Temp. in sbcssm
/
!-----------------------------------------------------------------------
&namtra_adv    !   advection scheme for tracer
!-----------------------------------------------------------------------
   ln_traadv_cen2    =  .false.   !  2nd order centered scheme
   ln_traadv_tvd     =  .false.   !  TVD scheme
   ln_traadv_muscl   =  .false.   !  MUSCL scheme
   ln_traadv_muscl2  =  .false.   !  MUSCL2 scheme + cen2 at boundaries
   ln_traadv_ubs     =  .false.   !  UBS scheme
   ln_traadv_qck     =  .false.   !  QUICKEST scheme
   ln_traadv_msc_ups =  .false.   !  use upstream scheme within muscl
   ln_traadv_tvd_zts =  .true.    !  TVD scheme with sub-timestepping of vertical tracer advection
!    ln_traadv_tvd     = .false.
!    ln_traadv_tvd_zts = .true.  ! TVD scheme with sub timestepping for vertical tracer advection
   nn_traadv_tvd_zts =    20      !     number of sub-time steps for ln_traadv_tvd_zts=T
/
!-----------------------------------------------------------------------
&namtra_adv_mle !  mixed layer eddy parametrisation (Fox-Kemper param)
!-----------------------------------------------------------------------
   ln_mle    = .false.  ! new (T) use the Mixed Layer Eddy (MLE) parameterisation
/
!----------------------------------------------------------------------------------
&namtra_ldf    !   lateral diffusion scheme for tracers some changes, some new stuff
!----------------------------------------------------------------------------------
   !                            !  Operator type:
   ln_traldf_lap    =  .true.   ! same laplacian operator
   ln_traldf_bilap  =  .false.  ! same bilaplacian operator
   !                            !  Direction of action:
   ln_traldf_level  =  .false.  ! same iso-level
   ln_traldf_hor    =  .true.  ! (needs "key_ldfslp" when ln_sco=T)
   ln_traldf_iso    =  .false.   ! isoneutral (needs "key_ldfslp")
   !
   rn_aeiv_0        =     0.    ! we have 0 eddy induced velocity coefficient [m2/s]
   rn_aht_0         =     1.5    ! we have 10 horizontal eddy diffusivity for tracers [m2/s]
   ! Smagorinsky stuff here if you set the key
/
!-----------------------------------------------------------------------
&namtra_dmp    !   tracer: T & S newtonian damping
!-----------------------------------------------------------------------
   ln_tradmp   =  .false.  !  add a damping termn (T) or not (F)
/
!-----------------------------------------------------------------------
&namdyn_adv    !   formulation of the momentum advection
!-----------------------------------------------------------------------
   ln_dynadv_vec = .true.  !  vector form (T) or flux form (F)
   nn_dynkeg     = 1       ! scheme for grad(KE): =0   C2  ;  =1   Hollingsworth correction
   ln_dynadv_cen2= .false. !  flux form - 2nd order centered scheme
   ln_dynadv_ubs = .false. !  flux form - 3rd order UBS      scheme
   ln_dynzad_zts = .true.  !  Use (T) sub timestepping for vertical momentum advection
   nn_dynzad_zts =   20    !     number of sub-time steps for ln_dynzad_zts=T
/
!-----------------------------------------------------------------------
&nam_vvl    !   vertical coordinate options
!-----------------------------------------------------------------------
   ln_vvl_zstar  = .true.           !  zstar vertical coordinate
   ln_vvl_ztilde = .false.          !  ztilde vertical coordinate: only high frequency variations
   ln_vvl_layer  = .false.          !  full layer vertical coordinate
   ln_vvl_ztilde_as_zstar = .false. !  ztilde vertical coordinate emulating zstar
   ln_vvl_zstar_at_eqtor = .false.  !  ztilde near the equator
   rn_ahe3       = 0.0e0            !  thickness diffusion coefficient
   rn_rst_e3t    = 30.e0            !  ztilde to zstar restoration timescale [days]
   rn_lf_cutoff  = 5.0e0            !  cutoff frequency for low-pass filter  [days]
   rn_zdef_max   = 0.9e0            !  maximum fractional e3t deformation
   ln_vvl_dbg    = .false.          !  debug prints    (T/F)
/
!-----------------------------------------------------------------------
&namdyn_vor    !   option of physics/algorithm (not control by CPP keys)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namc1d_uvd    !   data: U & V currents                                 ("key_c1d")
!-----------------------------------------------------------------------
!  file name  ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!             !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_ucur     = 'SalishSeaCast-VNR002_1h_grid_U'  ,         1       ,'vozocrtx',   .false.    , .false. , 'daily' ,  ''      ,  'Ume'   , ''
   sn_vcur     = 'SalishSeaCast-VNR002_1h_grid_V'  ,         1       ,'vomecrty',   .false.    , .false. , 'daily' ,  ''      ,  'Vme'   , ''
!
   cn_dir        = './source_model/'    !  root directory for the location of the files
   ln_uvd_init   = .true. !  Initialisation of ocean U & V with U & V input data (T) or not (F)
   ln_uvd_dyndmp = .false. !  damping of ocean U & V toward U & V input data (T) or not (F)
/
!-----------------------------------------------------------------------
&namc1d_dyndmp !   U & V newtonian damping                              ("key_c1d")
!-----------------------------------------------------------------------
   ln_dyndmp   =  .false.  !  add a damping term (T) or not (F)
/
!-----------------------------------------------------------------------
&namdyn_hpg    !   Hydrostatic pressure gradient option
!-----------------------------------------------------------------------
   ln_hpg_zco  = .false.   !  z-coordinate - full steps
   ln_hpg_zps  = .false.   !  z-coordinate - partial steps (interpolation)
   ln_hpg_sco  = .false.   !  s-coordinate (standard jacobian formulation)
   ln_hpg_djc  = .false.   !  s-coordinate (Density Jacobian with Cubic polynomial)
   ln_hpg_prj  = .true.    !  s-coordinate (Pressure Jacobian scheme)
   ln_dynhpg_imp = .false. !  time stepping: semi-implicit time scheme  (T)
                           !                 centered      time scheme  (F)
/
!-----------------------------------------------------------------------
!namdyn_spg    !   surface pressure gradient   (CPP key only)
!-----------------------------------------------------------------------
!-----------------------------------------------------------------------
&namdyn_ldf    !   lateral diffusion on momentum
!-----------------------------------------------------------------------
   !                            !  Type of the operator :
   ln_dynldf_lap    =  .true.   !  laplacian operator
   ln_dynldf_bilap  =  .false.  !  bilaplacian operator
   !                            !  Direction of action  :
   ln_dynldf_level  =  .false.  !  iso-level
   ln_dynldf_hor    =  .true.  !  horizontal (geopotential)   (require "key_ldfslp" in s-coord.)
   ln_dynldf_iso    =  .false.   !  iso-neutral                 (require "key_ldfslp")
   !                            !  Coefficient
   rn_ahm_0_lap     =   1.5     !  horizontal laplacian eddy viscosity   [m2/s]
   rn_ahmb_0        =     0.    !  background eddy viscosity for ldf_iso [m2/s]
   rn_ahm_0_blp     =  -1.0e+10 !  horizontal bilaplacian eddy viscosity [m4/s]
   rn_cmsmag_1      =     3.    !  constant in laplacian Smagorinsky viscosity
   rn_cmsmag_2      =     3     !  constant in bilaplacian Smagorinsky viscosity
   rn_cmsh          =     1.    !  1 or 0 , if 0 -use only shear for Smagorinsky viscosity
   rn_ahm_m_blp     =    -1.e12 !  upper limit for bilap  abs(ahm) < min( dx^4/128rdt, rn_ahm_m_blp)
   rn_ahm_m_lap     = 40000.    !  upper limit for lap  ahm < min(dx^2/16rdt, rn_ahm_m_lap)
/
!-----------------------------------------------------------------------
&namzdf        !   vertical physics
!-----------------------------------------------------------------------
   rn_avm0     =   1.e-6   !  vertical eddy viscosity   [m2/s]          (background Kz if not "key_zdfcst")
   rn_avt0     =   1.e-6   !  vertical eddy diffusivity [m2/s]          (background Kz if not "key_zdfcst")
   nn_avb      =    0      !  profile for background avt & avm (=1) or not (=0)
   nn_havtb    =    0      !  horizontal shape for avtb (=1) or not (=0)
   ln_zdfevd   = .false.   !  enhanced vertical diffusion (evd) (T) or not (F)
   nn_evdm     =  1        !  evd apply on tracer (=0) or on tracer and momentum (=1)
   rn_avevd    =  20.      !  evd mixing coefficient [m2/s]
   ln_zdfnpc   = .false.   !  Non-Penetrative Convective algorithm (T) or not (F)
   nn_npc      =    1      !  frequency of application of npc
   nn_npcp     =  365      !  npc control print frequency
   ln_zdfexp   = .false.   !  time-stepping: split-explicit (T) or implicit (F) time stepping
   nn_zdfexp   =    3      !  number of sub-timestep for ln_zdfexp=T
/
!-----------------------------------------------------------------------
&namzdf_ric    !   richardson number dependent vertical diffusion       ("key_zdfric" )
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namzdf_tke    !   turbulent eddy kinetic dependent vertical diffusion  ("key_zdftke")
!-----------------------------------------------------------------------
/
!------------------------------------------------------------------------
&namzdf_kpp    !   K-Profile Parameterization dependent vertical mixing  ("key_zdfkpp", and optionally:
!------------------------------------------------------------------------ "key_kppcustom" or "key_kpplktb")
/
!-----------------------------------------------------------------------
&namzdf_gls                !   GLS vertical diffusion                   ("key_zdfgls")
!-----------------------------------------------------------------------
   rn_wvage_max  =  28.2   !  Maximum "wave age" c_p/ustar (if nn_z0_met=2)
   rn_ustar_ref  =   0.18  !  Fetch/duration wave growth limitation threshold on ustar [m/s] (if nn_z0_met=2)
   rn_frac_hs    =   1.5   !  Fraction of wave height as roughness (if nn_z0_met=2)
/
/
!-----------------------------------------------------------------------
&namzdf_ddm    !   double diffusive mixing parameterization             ("key_zdfddm")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namzdf_tmx    !   tidal mixing parameterization                        ("key_zdftmx")
!-----------------------------------------------------------------------
   ln_tmx_itf  = .false.   !  ITF specific parameterisation
/
!-----------------------------------------------------------------------
&namzdf_tmx_new !  new tidal mixing parameterization                    ("key_zdftmx_new")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsol        !   elliptic solver / island / free surface
!-----------------------------------------------------------------------
   nn_solv     =      2    !  elliptic solver: =1 preconditioned conjugate gradient (pcg)
   nn_nmin     =    210    !  minimum of iterations for the SOR solver
   rn_sor      =  1.96     !  optimal coefficient for SOR solver (to be adjusted with the domain)
/
!-----------------------------------------------------------------------
&nammpp        !   Massively Parallel Processing                        ("key_mpp_mpi)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namctl        !   Control prints & Benchmark
!-----------------------------------------------------------------------
   ln_ctl      = .false.   !  trends control print (expensive!)
   nn_print    =    0      !  level of print (0 no extra print)
/
!-----------------------------------------------------------------------
&namnc4        !   netcdf4 chunking and compression settings            ("key_netcdf4")
!-----------------------------------------------------------------------
   nn_nchunks_i=   1       !  number of chunks in i-dimension
   nn_nchunks_j=   1       !  number of chunks in j-dimension
   nn_nchunks_k=   1       !  number of chunks in k-dimension
                           !  setting nn_nchunks_k = jpk will give a chunk size of 1 in the vertical which
                           !  is optimal for postprocessing which works exclusively with horizontal slabs
   ln_nc4zip   = .true.    !  (T) use netcdf4 chunking and compression
                           !  (F) ignore chunking information and produce netcdf3-compatible files
/
!-----------------------------------------------------------------------
&namtrd        !   diagnostics on dynamics and/or tracer trends         ("key_trddyn" and/or "key_trdtra")
!              !       or mixed-layer trends or barotropic vorticity    ("key_trdmld" or     "key_trdvor")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namflo       !   float parameters                                      ("key_float")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namptr       !   Poleward Transport Diagnostic
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namhsb       !  Heat and salt budgets
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namdct        ! transports through sections
!-----------------------------------------------------------------------
    nn_dct      = 60       !  time step frequency for transports computing
    nn_dctwri   = 60       !  time step frequency for transports writing
    nn_secdebug = 0        !      0 : no section to debug
/
!-----------------------------------------------------------------------
&namobs       !  observation usage switch                               ('key_diaobs')
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nam_asminc   !   assimilation increments                               ('key_asminc')
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_wave   ! External fields from wave model
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namdyn_nept  !   Neptune effect (simplified: lateral and vertical diffusions removed)
!-----------------------------------------------------------------------
   ln_neptramp       = .false.  ! ramp down Neptune velocity in shallow water
/